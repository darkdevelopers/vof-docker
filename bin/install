#!/bin/bash
#
# Usage: bin/install
# Description: This is the tool is install your local instance.
#
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

bold=$(tput bold)
normal=$(tput sgr0)

introduction() {
  clear
  echo -e "${GREEN}
      ##     ##  #######  ########    #### ##    ##  ######  ########    ###    ##       ##       ######## ########
      ##     ## ##     ## ##           ##  ###   ## ##    ##    ##      ## ##   ##       ##       ##       ##     ##
      ##     ## ##     ## ##           ##  ####  ## ##          ##     ##   ##  ##       ##       ##       ##     ##
      ##     ## ##     ## ######       ##  ## ## ##  ######     ##    ##     ## ##       ##       ######   ########
       ##   ##  ##     ## ##           ##  ##  ####       ##    ##    ######### ##       ##       ##       ##   ##
        ## ##   ##     ## ##           ##  ##   ### ##    ##    ##    ##     ## ##       ##       ##       ##    ##
         ###     #######  ##          #### ##    ##  ######     ##    ##     ## ######## ######## ######## ##     ## ${NC}

                                    by Marco Schauer <blackfire2k7@darkdevelopers.de>
  \n\n"
  echo -e "Start the install script 🐳 🦄 🚀"
  echo "This install script is help you for the installation and configuration from the docker enviroment."
  echo "When the install script failed you can restart this installation script."
  echo ""
  echo -e "${RED}Requirements:${NC}"
  echo "    - SSH KEY for Bitbucket - the name must be \"bitbucket.org-YOURNAME\""
  echo ""
  startInstallation
}

startInstallation() {
  printf "Start Installation? (Y/n) "
  read -r installInput

  if [ -z "$installInput" ]; then
    installInput="Y"
  fi

  if [ $installInput == "N" ] || [ $installInput == "n" ] || [ $installInput != "Y" ] && [ $installInput != "y" ]; then
    echo "Installation aborded"
    exit 1
  fi

  checkDockerIsRunning
}

checkDockerIsRunning() {
  echo ""
  echo -e "${YELLOW}Step 1: check if docker running${NC}"
  echo -ne '                                  (0%)\r'
  sleep 1
  ISRUNNING="$(curl --silent --unix-socket /var/run/docker.sock http:/ping)"
  echo -ne '##########                       (50%)\r'
  sleep 1
  if [ -z "$ISRUNNING" ] || [ "$ISRUNNING" == "Bad response from Docker engine" ] || [ "$ISRUNNING" == "dial unix docker.raw.sock: connect: connection refused" ]; then
    echo -ne "####################            (100%)"
    echo -ne "${RED} ERROR please start the docker software or wait is docker up"
    echo -ne '\n'
    echo -e "${NC}"
    exit 1
  fi
  echo -ne "####################            (100%)"
  echo -ne "${GREEN} PASS"
  echo -e "${NC}"
  checkSshIsExists
}

checkSshIsExists() {
  echo ""
  echo -e "${YELLOW}Step 2: check if ssh key exists${NC}"
  echo -ne '                                  (0%)\r'
  sleep 1
  SSHKEYS="$(ls ~/.ssh/bitbucket.org* 2>/dev/null)"
  echo -ne '##########                       (50%)\r'
  sleep 1
  if [ -z "$SSHKEYS" ]; then
    echo -ne "####################            (100%)"
    echo -ne "${RED} ERROR keys not found, place the keys under ${bold}~/.ssh/${normal}"
    echo -ne '\n'
    echo -e "${NC}"
    exit 1
  fi
  echo -ne "####################            (100%)"
  echo -ne "${GREEN} PASS"
  echo -e "${NC}"

  checkIsHtmlFolderExists
}

checkIsHtmlFolderExists() {
  echo ""
  echo -e "${YELLOW}Step 3: check if html folder exists${NC}"
  echo -ne '                                  (0%)\r'
  sleep 1
  FOLDER="$(ls ./html 2>/dev/null)"
  echo -ne '##########                       (50%)\r'
  sleep 1
  if [ ! -z "$FOLDER" ]; then
    echo -ne "####################            (100%)"
    echo -ne "${RED} ERROR html folder is exists"
    echo -ne '\n'
    echo -e "${NC}"
    deleteHtmlFolder
    exit 1
  fi
  echo -ne "####################            (100%)"
  echo -ne "${GREEN} PASS"
  echo -e "${NC}"

  copySshKeys
}

copySshKeys() {
  echo ""
  echo -e "${YELLOW}Step 4: copy ssh keys to your project${NC}"
  echo -ne '                                  (0%)\r'
  sleep 1
  cp ~/.ssh/bitbucket.org* ./config/sshagent/keys
  echo -ne '#####                            (25%)\r'
  sleep 1
  cp ~/.ssh/config ./config/sshagent/keys
  echo -ne '##########                       (50%)\r'
  sleep 1
  SSHKEYS="$(ls ~/.ssh/bitbucket.org* 2>/dev/null | xargs -n 1 basename)"
  SSHKEYSCOPIED="$(ls ./config/sshagent/keys/bitbucket.org* 2>/dev/null | xargs -n 1 basename)"
  echo -ne '###############                  (75%)\r'
  sleep 1
  if [ "$SSHKEYS" != "$SSHKEYSCOPIED" ]; then
    echo -ne "####################            (100%)"
    echo -ne "${RED} ERROR keys not the same"
    echo -ne '\n'
    echo -e "${NC}"
    exit 1
  fi
  echo -ne "####################            (100%)"
  echo -ne "${GREEN} PASS"
  echo -e "${NC}"

}

deleteHtmlFolder() {
  echo ""
  echo -e "${YELLOW}Step 3.1: delete html folder${NC}"
  echo -ne '                                  (0%)\r'
  sleep 1
  rm -rf ./html
  echo -ne '##########                       (50%)\r'
  sleep 1
  echo -ne "####################            (100%)"
  echo -ne "${GREEN} PASS"
  echo -e "${NC}"
  checkIsHtmlFolderExists
}

introduction
